{"ast":null,"code":"var _jsxFileName = \"D:\\\\React_learn\\\\Surfhouse\\\\src\\\\Component\\\\Windsurf\\\\Nav\\\\TagsWidget\\\\TagsWidget.js\";\nimport React from 'react';\nimport classes from './TagsWidget.module.css';\nimport { useParams } from \"react-router-dom\";\n\nconst TagsWidget = props => {\n  /* Для ссылки нужно текст и адркс \r\n  на сервере нужно будет читать урл и давть нужные данные\r\n  \r\n  */\n  let {\n    slug,\n    id\n  } = useParams();\n\n  if (!slug) {\n    slug = 'SurfProduct';\n  }\n\n  let str = props[slug][Number(id - 1)];\n  const Tags = [{\n    name: 'Kitesurf'\n  }, {\n    name: 'Super'\n  }, {\n    name: 'Duper'\n  }, {\n    name: 'Theme'\n  }, {\n    name: 'Men'\n  }, {\n    name: 'Women'\n  }, {\n    name: 'Kids'\n  }, {\n    name: 'All'\n  }, {\n    name: 'Apparel'\n  }, {\n    name: 'Man'\n  }, {\n    name: 'Best'\n  }];\n  return /*#__PURE__*/React.createElement(\"section\", {\n    className: classes.section,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 3\n    }\n  }, \"TagsWidget\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.Tags,\n    style: {\n      overflow: `${props.style}`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 3\n    }\n  }, Tags.map(el => {\n    if (el.name === str.Tags[0]) {\n      return /*#__PURE__*/React.createElement(\"span\", {\n        className: classes.active,\n        onClick: () => {\n          /* кол бек который подгрузит нужные данные с сервера */\n        },\n        className: classes.Tag,\n        key: el.name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 160\n        }\n      }, el.name));\n    } else {\n      return /*#__PURE__*/React.createElement(\"span\", {\n        onClick: () => {\n          /* кол бек который подгрузит нужные данные с сервера */\n        },\n        className: classes.Tag,\n        key: el.name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 133\n        }\n      }, el.name));\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    onClick: () => {\n      props.NewStyle();\n    },\n    className: classes.View,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 3\n    }\n  }, \"view all tags \\u2192\"));\n};\n\nexport default TagsWidget;","map":{"version":3,"sources":["D:/React_learn/Surfhouse/src/Component/Windsurf/Nav/TagsWidget/TagsWidget.js"],"names":["React","classes","useParams","TagsWidget","props","slug","id","str","Number","Tags","name","section","overflow","style","map","el","active","Tag","NewStyle","View"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,SAAQC,SAAR,QAAwB,kBAAxB;;AAGA,MAAMC,UAAU,GAAIC,KAAD,IAAU;AAC5B;;;;AAIA,MAAI;AAAEC,IAAAA,IAAF;AAAOC,IAAAA;AAAP,MAAcJ,SAAS,EAA3B;;AACA,MAAI,CAACG,IAAL,EAAW;AAACA,IAAAA,IAAI,GAAG,aAAP;AAAqB;;AACjC,MAAIE,GAAG,GAAGH,KAAK,CAACC,IAAD,CAAL,CAAYG,MAAM,CAACF,EAAE,GAAC,CAAJ,CAAlB,CAAV;AAEA,QAAMG,IAAI,GAAG,CAAC;AAACC,IAAAA,IAAI,EAAC;AAAN,GAAD,EAAmB;AAACA,IAAAA,IAAI,EAAC;AAAN,GAAnB,EAAkC;AAACA,IAAAA,IAAI,EAAC;AAAN,GAAlC,EAAiD;AAACA,IAAAA,IAAI,EAAC;AAAN,GAAjD,EAAgE;AAACA,IAAAA,IAAI,EAAC;AAAN,GAAhE,EAA6E;AAACA,IAAAA,IAAI,EAAC;AAAN,GAA7E,EACb;AAACA,IAAAA,IAAI,EAAC;AAAN,GADa,EACC;AAACA,IAAAA,IAAI,EAAC;AAAN,GADD,EACc;AAACA,IAAAA,IAAI,EAAC;AAAN,GADd,EAC+B;AAACA,IAAAA,IAAI,EAAC;AAAN,GAD/B,EAC4C;AAACA,IAAAA,IAAI,EAAC;AAAN,GAD5C,CAAb;AAEA,sBAAO;AAAS,IAAA,SAAS,EAAET,OAAO,CAACU,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADM,eAEN;AAAK,IAAA,SAAS,EAAEV,OAAO,CAACQ,IAAxB;AAA8B,IAAA,KAAK,EAAE;AAAEG,MAAAA,QAAQ,EAAG,GAAER,KAAK,CAACS,KAAM;AAA3B,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEJ,IAAI,CAACK,GAAL,CAASC,EAAE,IAAI;AACf,QAAIA,EAAE,CAACL,IAAH,KAAYH,GAAG,CAACE,IAAJ,CAAS,CAAT,CAAhB,EAA6B;AAC5B,0BAAO;AAAM,QAAA,SAAS,EAAER,OAAO,CAACe,MAAzB;AAAiC,QAAA,OAAO,EAAE,MAAM;AAAE;AAAyD,SAA3G;AAA6G,QAAA,SAAS,EAAEf,OAAO,CAACgB,GAAhI;AAAqI,QAAA,GAAG,EAAEF,EAAE,CAACL,IAA7I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAmJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAMK,EAAE,CAACL,IAAT,CAAnJ,CAAP;AACA,KAFD,MAEK;AACJ,0BAAO;AAAM,QAAA,OAAO,EAAE,MAAM;AAAE;AAAyD,SAAhF;AAAkF,QAAA,SAAS,EAAET,OAAO,CAACgB,GAArG;AAA0G,QAAA,GAAG,EAAEF,EAAE,CAACL,IAAlH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAwH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAMK,EAAE,CAACL,IAAT,CAAxH,CAAP;AACA;AAAC,GALF,CADF,CAFM,eAUN;AAAK,IAAA,OAAO,EAAE,MAAM;AAACN,MAAAA,KAAK,CAACc,QAAN;AAAiB,KAAtC;AAAyC,IAAA,SAAS,EAAEjB,OAAO,CAACkB,IAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAVM,CAAP;AAYA,CAvBD;;AAyBA,eAAehB,UAAf","sourcesContent":["import React from 'react'\r\nimport classes from './TagsWidget.module.css'\r\nimport {useParams} from \"react-router-dom\";\r\n\r\n\r\nconst TagsWidget = (props) =>{\r\n\t/* Для ссылки нужно текст и адркс \r\n\tна сервере нужно будет читать урл и давть нужные данные\r\n\t\r\n\t*/\r\n\tlet { slug,id } = useParams()\r\n\tif (!slug) {slug = 'SurfProduct'}\r\n\tlet str = props[slug][Number(id-1)]\r\n\r\n\tconst Tags = [{name:'Kitesurf'},{name:'Super'},{name:'Duper'},{name:'Theme'},{name:'Men'},{name:'Women'},\r\n\t{name:'Kids'},{name:'All'},{name:'Apparel'},{name:'Man'},{name:'Best'}] \r\n\treturn <section className={classes.section}>\r\n\t\t<h2>TagsWidget</h2>\r\n\t\t<div className={classes.Tags} style={{\toverflow: `${props.style}`}}>\r\n\t\t\t{Tags.map(el => {\r\n\t\t\t\tif (el.name === str.Tags[0]) {\r\n\t\t\t\t\treturn <span className={classes.active} onClick={() => { /* кол бек который подгрузит нужные данные с сервера */ }} className={classes.Tag} key={el.name}><div>{el.name}</div></span>\r\n\t\t\t\t}else{\r\n\t\t\t\t\treturn <span onClick={() => { /* кол бек который подгрузит нужные данные с сервера */ }} className={classes.Tag} key={el.name}><div>{el.name}</div></span>\r\n\t\t\t\t}})}\r\n\t\t</div>\r\n\t\t<div onClick={() => {props.NewStyle()} } className={classes.View}>view all tags &#8594;</div>\r\n\t</section>\r\n}\r\n\r\nexport default TagsWidget\r\n"]},"metadata":{},"sourceType":"module"}